@using PagedList
@using PagedList.Mvc
@model IPagedList<NguyenNhutDuy_2122110447.Models.DonHang>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
<<<<<<< HEAD
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <title>Quản Lý Đơn Hàng</title>
    <style>
        :root {
            --primary-color: #FF4500;
            --secondary-color: #FFD700;
            --bg-color: #FFF5E1;
            --text-color: #FF4500;
            --card-bg: #FFFFFF;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 3px dashed var(--secondary-color);
        }

            .header h1 {
                color: var(--primary-color);
                display: flex;
                align-items: center;
                gap: 10px;
            }

        .action-buttons {
            display: flex;
            gap: 15px;
        }

        .btn {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .btn-import {
            background-color: var(--secondary-color);
            color: var(--text-color);
            border-radius: 12px;
        }

            .btn-import:hover {
                background-color: var(--primary-color);
                color: white;
            }

        .btn-import {
            background-color: var(--secondary-color);
            color: var(--text-color);
        }

            .btn-import:hover {
                background-color: var(--primary-color);
                color: white;
            }

        .order-table {
            width: 100%;
            border-collapse: collapse;
            background-color: var(--card-bg);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            border-radius: 10px;
            overflow: hidden;
        }

            .order-table th {
                background-color: var(--primary-color);
                color: white;
                padding: 12px;
                text-align: left;
            }

            .order-table td {
                padding: 10px;
                border-bottom: 1px solid #e0e0e0;
            }

        .category-badge {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: bold;
            margin-right: 5px;
        }

        .category-electronics {
            background-color: #2196F3;
            color: white;
        }

        .category-home-appliance {
            background-color: #4CAF50;
            color: white;
        }

        .category-office-supplies {
            background-color: #FF9800;
            color: white;
        }

        .category-fashion {
            background-color: #9C27B0;
            color: white;
        }

        .category-food {
            background-color: #FF5722;
            color: white;
        }

        .payment-status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: bold;
        }

        .paid {
            background-color: #4CAF50;
            color: white;
        }

        .unpaid {
            background-color: #F44336;
            color: white;
        }

        #importModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            width: 80%;
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.2);
        }

        .close-btn {
            float: right;
            font-size: 24px;
            cursor: pointer;
            color: var(--primary-color);
        }

        .modal-content h2 {
            color: var(--primary-color);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .import-section {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 20px;
        }

        .import-file {
            display: flex;
            align-items: center;
            gap: 10px;
        }

            .import-file input[type="file"] {
                flex-grow: 1;
            }

            .import-file button {
                background-color: var(--primary-color);
                color: white;
                border: none;
                padding: 10px 15px;
                border-radius: 5px;
                cursor: pointer;
            }

        .action-buttons button {
            margin-right: 5px;
            padding: 5px 10px;
            font-size: 0.9em;
            border-radius: 5px;
            cursor: pointer;
            border: none;
        }

        .edit-button {
            background-color: #1E90FF;
            color: white;
        }

        .delete-button {
            background-color: #DC143C;
            color: white;
        }

        .filter-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

            .filter-container input {
                width: 30%;
                padding: 10px;
                border: 2px solid var(--primary-color);
                border-radius: 50px;
            }

            .filter-container select, .filter-container button {
                padding: 15px;
                border: 2px solid var(--primary-color);
                border-radius: 50px;
            }

            .filter-container button {
                background-color: var(--secondary-color);
                color: var(--text-color);
                cursor: pointer;
            }

                .filter-container button:hover {
                    background-color: var(--primary-color);
                    color: white;
                }

        .pagination a {
            color: darkorange;
            text-decoration: none;
            padding: 5px 10px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin: 0 2px;
        }

            .pagination a:hover {
                background-color: coral;
                color: beige
            }

        .pagination .active a {
            background-color: gold;
            color: white;
            border-color: #007bff;
=======
<<<<<<< HEAD
    <title>Danh sách Đơn hàng</title>
=======
    <title>Danh sách đơn hàng</title>
>>>>>>> f511d44531c3462afc24e4e10c40606d84f43b9e
    <style>
        body {
            background: url('/Content/image/hinh-nen-powerpoint-tet-14-3.png') no-repeat center center;
            background-size: cover;
            background-attachment: fixed;
            height: 90vh;
            color: aliceblue
        }
        .custom-btn a {
            color: aliceblue; /* Đặt màu chữ vàng cho link */
            text-decoration: none; /* Bỏ gạch chân */
        }
        .custom-btn a:hover {
            color: orange; /* Hiệu ứng màu chữ khi hover (tuỳ chọn) */
        }
        .custom-btn a::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border: 2px solid gold; /* Viền vàng */
            border-radius: 5px; /* Bo tròn góc (tuỳ chọn) */
            pointer-events: none; /* Không ảnh hưởng khi click */
>>>>>>> dc7e641d3c441c1823f654766761d0d3dbed7bb2
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function handleRowClick(event, orderId) {
            if (event.target.closest('.btn')) {
                return;
            }
            var modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            fetch(`/Order/Detail/${orderId}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('orderDetailContent').innerHTML = data;
                })
                .catch(error => {
                    console.error('Error loading order details:', error);
                    document.getElementById('orderDetailContent').innerHTML = 'Không thể tải chi tiết đơn hàng.';
                });
        }
    </script>



</head>
<body>
<<<<<<< HEAD
    <div class="container">
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-info">
                @ViewBag.Message
            </div>
        }
        <div class="header d-flex justify-content-between align-items-center">
            <h1 class="flex-grow-1 text-center">
                Quản Lý đơn hàng
            </h1>
            <form class="d-flex flex-grow-1 justify-content-center" method="get">
                <div class="col-md-5 px-2 align-content-center">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên vật tư..." value="@Request.QueryString["searchTerm"]" />
                </div>
                <div class="col-md-5 px-2 align-content-center">
                    <select name="sortOrder" class="form-select">
                        <option value="asc" @(Request.QueryString["sortOrder"] == "asc" ? "selected" : "")>Giá trị đơn hàng: Thấp đến Cao</option>
                        <option value="desc" @(Request.QueryString["sortOrder"] == "desc" ? "selected" : "")>Giá trị đơn hàng: Cao đến Thấp</option>
                    </select>
                </div>
                <div class="col-md-2 px-2 align-content-center">
                    <button type="submit" class="btn btn-warning">Lọc</button>
                </div>
            </form>
            <div class="action-buttons flex-grow-1 d-flex justify-content-end">
                <button class="btn btn-import" onclick="window.location.href='@Url.Action("Create", "Order")'">
                    <i class="fas fa-file-import"></i> Nhập đơn hàng
                </button>
                <button class="btn btn-import" onclick="window.location.href='@Url.Action("Distribution", "Order")'">
                    <i class="fas bi bi-truck"></i> Chia hàng tự động
                </button>
            </div>
        </div>
    </div>

        @if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
        {

            <p class="text-muted"> <b style="color:aliceblue">Kết quả tìm kiếm cho: @Request.QueryString["searchTerm"]</b></p>

            <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
        }

        <table class="order-table table table-hover">
            <thead>
                <tr>
                    <th>Địa chỉ</th>
                    <th>Tên</th>
                    <th>Loại</th>
                    <th>Cân nặng(kg)</th>
                    <th>Tên người nhận</th>
                    <th>Sdt</th>
                    <th>Giá trị đơn hàng</th>
                    <th>Tổng tiền</th>
                    <th>Ghi chú</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr onclick="handleRowClick(event, @item.Id)" style="cursor: pointer">

                        <td>@Html.DisplayFor(modelItem => item.DiaChi)</td>
                        <td>@Html.DisplayFor(modelItem => item.Ten)</td>
                        <td>@Html.DisplayFor(modelItem => item.Loai)</td>
                        <td>@Html.DisplayFor(modelItem => item.CanNang)</td>
                        <td>@Html.DisplayFor(modelItem => item.TenNguoiNhan)</td>
                        <td>@Html.DisplayFor(modelItem => item.Sdt)</td>
                        <td>@String.Format("{0:0,0}", item.GiaTriDonHang)</td>
                        <td>@String.Format("{0:0,0}", item.TongTien)</td>
                        <td>@Html.DisplayFor(modelItem => item.GhiChu)</td>
                        <td>

                            @Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new
                            {
                                @class = "btn btn-dark btn-sm",
                                onclick = "return confirm('Bạn có chắc muốn xóa không?');"
                            })
                            <p></p>
                            @Html.ActionLink("Sửa", "Edit", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })

                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <div id="detailModal" class="modal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: url('/Content/image/image_26-hinh-nen-powerpoint-tet.jpg'); background-size:cover">
                    <div class="modal-header">
                        <h4 class="modal-title text-dark">Chi tiết đơn hàng</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p id="orderDetailContent">Đang tải...</p>
                    </div>
                </div>
            </div>
        </div>



    </div>
    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index",
                          new
                          {
                              page = page,
                              searchTerm = Request.QueryString["searchTerm"],
                              sortOrder = Request.QueryString["sortOrder"]
                          }),
                          new PagedListRenderOptions
                          {
                              DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                              DisplayLinkToLastPage = PagedListDisplayMode.Always,
                              DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                              DisplayLinkToNextPage = PagedListDisplayMode.Always,
                              MaximumPageNumbersToDisplay = 5,
                              DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                              UlElementClasses = new[] { "pagination" },
                              LiElementClasses = new[] { "page-item" },
                          })

    </div>
=======
    <button class="btn custom-btn" >
        @Html.ActionLink("Nhập hàng", "Create", null, new { @style = "text-decoration: none;" })
    </button>


    <p></p>
    <div class="row mb-3">
        <div class="col-md-4">
            <form method="get">
                <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên..." value="@Request.QueryString["searchTerm"]" />
        </div>
        <div class="col-md-4">
            <select name="sortOrder" class="form-select">
                <option value="asc" @(Request.QueryString["sortOrder"] == "asc" ? "selected" : "")>Giá trị đơn hàng: Thấp đến Cao</option>
                <option value="desc" @(Request.QueryString["sortOrder"] == "desc" ? "selected" : "")>Giá trị đơn hàng: Cao đến Thấp</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary">Lọc</button>
            </form>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
    {
<<<<<<< HEAD
        <p class="text-muted"> <b style="color:aliceblue">Kết quả tìm kiếm cho: @Request.QueryString["searchTerm"]</b></p>
=======
        <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
>>>>>>> f511d44531c3462afc24e4e10c40606d84f43b9e
    }

    <table class="table table-hover">
        <thead class="table-dark">
            <tr class="align-content-center">
                <th>Địa chỉ</th>
                <th>Tên</th>
                <th>Loại</th>
                <th>Cân nặng(kg)</th>
                <th>Tên người nhận</th>
                <th>Sdt</th>
                <th>Giá trị đơn hàng</th>
                <th>Tổng tiền</th>
                <th>Ghi chú</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody style="color:aliceblue">
            @foreach (var item in Model)
            {
              <tr onclick="handleRowClick(event, @item.Id)" style="cursor: pointer">

                  <td>@Html.DisplayFor(modelItem => item.DiaChi)</td>
                  <td>@Html.DisplayFor(modelItem => item.Ten)</td>
                  <td>@Html.DisplayFor(modelItem => item.Loai)</td>
                  <td>@Html.DisplayFor(modelItem => item.CanNang)</td>
                  <td>@Html.DisplayFor(modelItem => item.TenNguoiNhan)</td>
                  <td>@Html.DisplayFor(modelItem => item.Sdt)</td>
                  <td>@String.Format("{0:0,0}", item.GiaTriDonHang)</td>
                  <td>@String.Format("{0:0,0}", item.TongTien)</td>
                  <td>@Html.DisplayFor(modelItem => item.GhiChu)</td>
                  <td>

                      @Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new
                      {
                          @class = "btn btn-dark btn-sm",
                          onclick = "return confirm('Bạn có chắc muốn xóa không?');"
                      })
                      <p></p>
                      @Html.ActionLink("Sửa", "Edit", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })

                  </td>
              </tr>
            }
        </tbody>

    </table>
    <div id="detailModal" class="modal" tabindex="-1" >
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" style="background: url('/Content/image/image_26-hinh-nen-powerpoint-tet.jpg'); background-size:cover">
                <div class="modal-header">
                    <h4 class="modal-title text-dark">Chi tiết đơn hàng</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="orderDetailContent">Đang tải...</p>
                </div>
            </div>
        </div>
    </div>


    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index",
           new
           {
               page = page,
               searchTerm = Request.QueryString["searchTerm"],
               sortOrder = Request.QueryString["sortOrder"]
           }),
           new PagedListRenderOptions
           {
               DisplayLinkToFirstPage = PagedListDisplayMode.Always,
               DisplayLinkToLastPage = PagedListDisplayMode.Always,
               DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
               DisplayLinkToNextPage = PagedListDisplayMode.Always,
               MaximumPageNumbersToDisplay = 5,
               DisplayEllipsesWhenNotShowingAllPageNumbers = true,
               UlElementClasses = new[] { "pagination" },
               LiElementClasses = new[] { "page-item" },
           })

    </div>
    <style>
        .pagination a {
            color: gold;
            text-decoration: none;
            padding: 5px 10px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin: 0 2px;
        }

            .pagination a:hover {
                background-color: cornflowerblue;
            }

        .pagination .active a {
            background-color: blue;
            color: white;
            border-color: #007bff;
        }
    </style>

>>>>>>> dc7e641d3c441c1823f654766761d0d3dbed7bb2
</body>
</html>
